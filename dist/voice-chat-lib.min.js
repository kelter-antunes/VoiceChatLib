var VoiceChatLib=(()=>{var e;function m(t,e){return t?"string"==typeof t?document.querySelector(t):t:document.querySelector(e)}function i(t){if(this.config={amplitudeSmoothFactorVar:.3,baseRotationDivisor:16,dynamicLerpMin:.05,dynamicLerpAudioMultiplier:.5,maxAdditionalRotation:360,baseScaleMultiplier:2,elements:{toggleBtn:"#toggleMicBtn",endBtn:"#endChatBtn",micStatus:"#micStatus",micDevice:"#micDevice",voiceEls:".a-cue-voice-el"}},t)for(var e in t)if(t.hasOwnProperty(e))if("elements"===e)for(var i in t.elements)t.elements.hasOwnProperty(i)&&(this.config.elements[i]=t.elements[i]);else this.config[e]=t[e];this.audioStream=null,this.audioContext=null,this.analyser=null,this.microphone=null,this.animationId=null,this.isMicOn=!0,this.smoothedAmplitude=0,this.startTime=null,this.lastFrameTime=null,this.MAX_DELTA=100,this.voiceEls=[],this.toggleBtn=null,this.endBtn=null,this.micStatus=null,this.micDevice=null,this.elementsBound=!1,this.audioStarted=!1,this.domObserver=null,this.mediaRecorder=null,this.recordedChunks=[],this.onStart=null,this.onToggle=null,this.onEnd=null}return i.prototype.setOptions=function(t){for(var e in t)if(t.hasOwnProperty(e))if("elements"===e)for(var i in t.elements)t.elements.hasOwnProperty(i)&&(this.config.elements[i]=t.elements[i]);else this.config[e]=t[e]},i.prototype.initElements=function(){for(var t,e=this.config.elements,i=(this.toggleBtn=m(e.toggleBtn,"#toggleMicBtn"),this.endBtn=m(e.endBtn,"#endChatBtn"),this.micStatus=m(e.micStatus,"#micStatus"),this.micDevice=m(e.micDevice,"#micDevice"),this.voiceEls=(t=".a-cue-voice-el",(e=e.voiceEls)?"string"==typeof e?document.querySelectorAll(e):e:document.querySelectorAll(t)),performance.now()),o=0;o<this.voiceEls.length;o++){var n,a,s,r,c,d=this.voiceEls[o];d.initialized||(r=(360*Math.random()).toFixed(0),n=(1+2*Math.random()).toFixed(2),a=(1+1.5*Math.random()).toFixed(2),d.dataset.offset=r,d.dataset.speed=n,d.dataset.scaleMultiplier=a,c=(45+10*Math.random()).toFixed(0),s=(45+10*Math.random()).toFixed(0),d.style.transformOrigin=c+"% "+s+"%",this.audioStarted&&"number"==typeof this.startTime?(c=i-this.startTime,s=parseFloat(r)+c*parseFloat(n)/this.config.baseRotationDivisor,r=this.smoothedAmplitude*this.config.maxAdditionalRotation,d.currentRotation=s+r,c=1+this.smoothedAmplitude*parseFloat(a)*this.config.baseScaleMultiplier,d.currentScale=c):(d.currentRotation=0,d.currentScale=1),d.initialized=!0)}var l=this;this.toggleBtn&&!this.toggleBtnBound&&(this.toggleBtn.addEventListener("click",function(){l.toggleMic()}),this.toggleBtnBound=!0),this.endBtn&&!this.endBtnBound&&(this.endBtn.addEventListener("click",function(){l.end()}),this.endBtnBound=!0),this.updateMicDisplay(),this.elementsBound=!0},i.prototype.observeDOM=function(){var e=this;this.domObserver||(this.domObserver=new MutationObserver(function(t){e.initElements()}),this.domObserver.observe(document.body,{childList:!0,subtree:!0}))},i.prototype.updateMicDisplay=function(){var t=this.isMicOn?"Turn off microphone":"Turn on microphone";this.toggleBtn&&(this.toggleBtn.classList.toggle("is--on",this.isMicOn),this.toggleBtn.classList.toggle("is--off",!this.isMicOn)),this.micStatus&&(this.micStatus.textContent=t)},i.prototype.lerp=function(t,e,i){return t+i*(e-t)},i.prototype.initAudio=function(){var i=this;navigator.mediaDevices.getUserMedia({audio:!0}).then(function(t){i.audioStream=t,i.audioContext=new(window.AudioContext||window.webkitAudioContext),i.microphone=i.audioContext.createMediaStreamSource(t),i.analyser=i.audioContext.createAnalyser(),i.analyser.fftSize=256,i.microphone.connect(i.analyser);var e,t=i.audioStream.getAudioTracks()[0];if(t&&t.label?i.micDevice?i.micDevice.textContent="Communications - "+t.label:(e=document.getElementById("micDevice"))&&(e.textContent="Communications - "+t.label):i.micDevice&&(i.micDevice.textContent="Communications - Microphone (unknown)"),i.updateMicDisplay(),i.startTime=performance.now(),i.lastFrameTime=i.startTime,i.updateAnimation(),i.audioStarted=!0,window.MediaRecorder){i.recordedChunks=[];try{i.mediaRecorder=new MediaRecorder(i.audioStream),i.mediaRecorder.ondataavailable=function(t){t.data&&0<t.data.size&&i.recordedChunks.push(t.data)},i.mediaRecorder.start()}catch(t){console.error("MediaRecorder creation failed:",t)}}else console.warn("MediaRecorder API not supported in this browser.");"function"==typeof i.onStart&&i.onStart({event:"start",timestamp:Date.now(),details:"VoiceChat audio and recording successfully started"})}).catch(function(t){console.error("Error accessing the microphone:",t),alert("Could not access the microphone. Check your permissions.")})},i.prototype.updateAnimation=function(){var n=this;if(n.analyser){var t=performance.now();n.lastFrameTime||(n.lastFrameTime=t,n.startTime=t);t-n.lastFrameTime>n.MAX_DELTA&&(n.startTime=t),n.lastFrameTime=t;for(var e=new Uint8Array(n.analyser.frequencyBinCount),i=(n.analyser.getByteTimeDomainData(e),0),o=0;o<e.length;o++)i+=Math.abs(e[o]-128);var a=i/e.length,s=(n.smoothedAmplitude=n.smoothedAmplitude*(1-n.config.amplitudeSmoothFactorVar)+a/128*n.config.amplitudeSmoothFactorVar,t-n.startTime),r=n.config.dynamicLerpMin+n.smoothedAmplitude*n.config.dynamicLerpAudioMultiplier;n.voiceEls.forEach(function(t){var e=parseFloat(t.dataset.offset),i=parseFloat(t.dataset.speed),o=parseFloat(t.dataset.scaleMultiplier),e=e+s*i/n.config.baseRotationDivisor,i=n.smoothedAmplitude*n.config.maxAdditionalRotation,o=1+n.smoothedAmplitude*o*n.config.baseScaleMultiplier;t.currentRotation=n.lerp(t.currentRotation,e+i,r),t.currentScale=n.lerp(t.currentScale,o,r),t.style.transform="rotate("+t.currentRotation.toFixed(2)+"deg) scale("+t.currentScale.toFixed(2)+")"}),n.animationId=requestAnimationFrame(function(){n.updateAnimation()})}},i.prototype.toggleMic=function(){var e=this;this.mediaRecorder?this.isMicOn?("recording"===this.mediaRecorder.state&&this.mediaRecorder.pause(),this.isMicOn=!1,this.audioStream&&this.audioStream.getAudioTracks().forEach(function(t){t.enabled=!1})):("paused"===this.mediaRecorder.state&&this.mediaRecorder.resume(),this.isMicOn=!0,this.audioStream&&this.audioStream.getAudioTracks().forEach(function(t){t.enabled=!0})):this.audioStream&&0<this.audioStream.getAudioTracks().length&&(this.isMicOn=!this.isMicOn,this.audioStream.getAudioTracks().forEach(function(t){t.enabled=e.isMicOn})),this.updateMicDisplay(),"function"==typeof e.onToggle&&e.onToggle({event:"toggleMic",timestamp:Date.now(),isMicOn:e.isMicOn,details:"Microphone toggled"})},i.prototype.end=function(){this.animationId&&cancelAnimationFrame(this.animationId);var o=this;this.audioStream&&this.audioStream.getTracks().forEach(function(t){t.stop()}),this.audioContext&&this.audioContext.close(),this.toggleBtn&&(this.toggleBtn.disabled=!0),this.endBtn&&(this.endBtn.disabled=!0),this.micStatus&&(this.micStatus.textContent="Voice Chat Ended"),this.micDevice&&(this.micDevice.textContent=""),!this.mediaRecorder||"recording"!==this.mediaRecorder.state&&"paused"!==this.mediaRecorder.state?"function"==typeof o.onEnd&&o.onEnd({event:"end",timestamp:Date.now(),details:"VoiceChat session ended (no audio recorded)"}):(this.mediaRecorder.onstop=function(t){var e=new Blob(o.recordedChunks,{type:"audio/webm"}),i={duration:performance.now()-o.startTime,size:e.size,mimeType:e.type};"function"==typeof o.onEnd&&o.onEnd({event:"end",timestamp:Date.now(),details:"VoiceChat session ended",audioBlob:e,audioMeta:i})},this.mediaRecorder.stop())},i.prototype.reset=function(){if(this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null),this.audioStream&&(this.audioStream.getTracks().forEach(function(t){t.stop()}),this.audioStream=null),this.audioContext&&(this.audioContext.close(),this.audioContext=null),this.mediaRecorder&&"inactive"!==this.mediaRecorder.state){try{this.mediaRecorder.stop()}catch(t){console.error("Error stopping media recorder during reset:",t)}this.mediaRecorder=null}this.recordedChunks=[],this.startTime=null,this.lastFrameTime=null,this.audioStarted=!1,this.isMicOn=!0,this.toggleBtn&&(this.toggleBtn.disabled=!1),this.endBtn&&(this.endBtn.disabled=!1),this.micStatus&&(this.micStatus.textContent="Turn off microphone"),this.micDevice&&(this.micDevice.textContent="")},i.prototype.start=function(){this.observeDOM(),this.initElements(),this.audioStarted||this.initAudio()},{getInstance:function(t){return e?t&&e.setOptions(t):e=new i(t||{}),e}}})();